import numpy as np 
import matplotlib.pyplot as plt 
import csv

def converge(file):
    file_to_read = open(file, 'r')
    csvreader = csv.reader(file_to_read)
    info_to_plot = []
    for row in csvreader: 
        current_row = [float(row[0]), float(row[1]), float(row[2])]
        info_to_plot.append(current_row)
    # info_to_plot = np.array(info_to_plot)
    file_to_read.close()
    return np.array(info_to_plot)

def converge2(file):
    file_to_read = open(file, 'r')
    csvreader = csv.reader(file_to_read)
    info_to_plot = []
    for row in csvreader: 
        current_row = [float(row[0])]
        info_to_plot.append(current_row)
    # info_to_plot = np.array(info_to_plot)
    file_to_read.close()
    return np.array(info_to_plot)

# K_final = converge('convergence/K_final.csv')
# plt.loglog(K_final[:, 0], K_final[:, 1], label='K_final_analytical')
# plt.loglog(K_final[:, 0], K_final[:, 2], label='K_final_numerical')
# plt.title('log-log plot of K_final .vs. number of blades')
# plt.xlabel('number of blades []')
# plt.ylabel('K_final []')
# plt.legend()
# plt.show()

# x0_0 = converge('convergence/x0_0.csv')
# plt.loglog(x0_0[:, 0], x0_0[:, 1], label='x0_0_analytical')
# plt.loglog(x0_0[:, 0], x0_0[:, 2], label='x0_0_numerical')
# plt.title('log-log plot of x0_0 .vs. number of blades')
# plt.xlabel('number of blades []')
# plt.ylabel('x0_0 []')
# plt.legend()
# plt.show()

# x0_1 = converge('convergence/x0_1.csv')
# plt.loglog(np.abs(x0_1[:, 0]), np.abs(x0_1[:, 1]), label='x0_1_analytical')
# plt.loglog(np.abs(x0_1[:, 0]), np.abs(x0_1[:, 2]), label='x0_1_numerical')
# plt.title('log-log plot of x0_1 .vs. number of blades')
# plt.xlabel('number of blades []')
# plt.ylabel('x0_1 []')
# plt.legend()
# plt.show()

# x0_2 = converge('convergence/x0_2.csv')
# plt.loglog(x0_2[:, 0], x0_2[:, 1], label='x0_2_analytical')
# plt.loglog(x0_2[:, 0], x0_2[:, 2], label='x0_2_numerical')
# plt.title('log-log plot of x0_2 .vs. number of blades')
# plt.xlabel('number of blades []')
# plt.ylabel('x0_2 []')
# plt.legend()
# plt.show()

# x0_3 = converge('convergence/x0_3.csv')
# plt.loglog(np.abs(x0_3[:, 0]), np.abs(x0_3[:, 1]), label='x0_3_analytical')
# plt.loglog(np.abs(x0_3[:, 0]), np.abs(x0_3[:, 2]), label='x0_3_numerical')
# plt.title('log-log loglog of x0_3 .vs. number of blades')
# plt.xlabel('number of blades []')
# plt.ylabel('x0_3 []')
# plt.legend()
# plt.show()


K_final = converge('convergence/K_final_b.csv')
plt.loglog(K_final[:, 0], K_final[:, 1], label='K_final_analytical')
plt.loglog(K_final[:, 0], K_final[:, 2], label='K_final_numerical')
plt.title('log-log plot of K_final .vs. number of blades')
plt.xlabel('number of blades []')
plt.ylabel('K_final []')
plt.legend()
plt.savefig('K_final', dpi=600)
plt.show()

x0_0 = converge('convergence/x0_0_b.csv')
plt.loglog(x0_0[:, 0], x0_0[:, 1], label='x0_0_analytical')
plt.loglog(x0_0[:, 0], x0_0[:, 2], label='x0_0_numerical')
plt.title('log-log plot of x0_0 .vs. number of blades')
plt.xlabel('number of blades []')
plt.ylabel('x0_0 []')
plt.legend()
plt.savefig('x0_0', dpi=600)
plt.show()

x0_1 = converge('convergence/x0_1_b.csv')
plt.loglog(np.abs(x0_1[:, 0]), np.abs(x0_1[:, 1]), label='x0_1_analytical')
plt.loglog(np.abs(x0_1[:, 0]), np.abs(x0_1[:, 2]), label='x0_1_numerical')
plt.title('log-log plot of x0_1 .vs. number of blades')
plt.xlabel('number of blades []')
plt.ylabel('x0_1 []')
plt.legend()
plt.savefig('x0_1', dpi=600)
plt.show()

x0_2 = converge('convergence/x0_2_b.csv')
plt.loglog(x0_2[:, 0], x0_2[:, 1], label='x0_2_analytical')
plt.loglog(x0_2[:, 0], x0_2[:, 2], label='x0_2_numerical')
plt.title('log-log plot of x0_2 .vs. number of blades')
plt.xlabel('number of blades []')
plt.ylabel('x0_2 []')
plt.legend()
plt.savefig('x0_2', dpi=600)
plt.show()

x0_3  = converge('convergence/x0_3_b.csv')
plt.loglog(np.abs(x0_3[:, 0]), np.abs(x0_3[:, 1]), label='x0_3_analytical')
plt.loglog(np.abs(x0_3[:, 0]), np.abs(x0_3[:, 2]), label='x0_3_numerical')
plt.title('log-log loglog of x0_3 .vs. number of blades')
plt.xlabel('number of blades []')
plt.ylabel('x0_3 []')
plt.legend()
plt.savefig('x0_3', dpi=600)
plt.show()

Fl_mean = converge('convergence/Fl_mean.csv')
Fd_mean = converge('convergence/Fd_mean.csv')
Frot_mean = converge('convergence/Frot_mean.csv')


plt.loglog(Fl_mean[:, 0], Fl_mean[:, 1], label='Fl_mean_analytical')
plt.loglog(Fl_mean[:, 0], Fl_mean[:, 2], label='Fl_mean_numerical')
plt.title('log-log plot for both Fl_mean_analytical and Fl_mean_numerical .vs. number of blades')
plt.xlabel('number of blades []')
plt.ylabel('Fl_mean [N]')
plt.legend()
plt.savefig('Fl_mean', dpi=600)
plt.show()

plt.loglog(Fd_mean[:, 0], Fd_mean[:, 1], label='Fd_mean_analytical')
plt.loglog(Fd_mean[:, 0], Fd_mean[:, 2], label='Fd_mean_numerical')
plt.title('log-log plot for both Fd_mean_analytical and Fd_mean_numerical .vs. number of blades')
plt.xlabel('number of blades []')
plt.ylabel('Fd_mean [N]')
plt.legend()
plt.savefig('Fd_mean', dpi=600)
plt.show()

plt.loglog(Frot_mean[:, 0], Frot_mean[:, 1], label='Frot_mean_analytical')
plt.loglog(Frot_mean[:, 0], Frot_mean[:, 2], label='Frot_mean_numerical')
plt.title('log-log plot for both Frot_mean_analytical and Frot_mean_numerical .vs. number of blades')
plt.xlabel('number of blades []')
plt.ylabel('Frot_mean [N]')
plt.legend()
plt.savefig('Frot_mean', dpi=600)
plt.show()